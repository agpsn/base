name: Build
on: 
  workflow_dispatch:

jobs:

  BuildImages:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: SetVariables
        run: |
          echo "AVERSION=$(docker run --pull=always --quiet --rm alpine:latest cat /etc/os-release | grep VERSION_ID | cut -f2 -d'=')" >> $GITHUB_ENV
          echo "UVERSION=$(docker run --pull=always --quiet --rm ubuntu:latest cat /etc/os-release | grep VERSION_ID | cut -f2 -d'=' | cut -f2 -d"\"")" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: 'v1.13.1'

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

#      - name: Extract Docker metadata
#        id: meta
#        uses: docker/metadata-action@v4
#        with:
#          images: |
#            ghcr.io/agpsn/alpine-base:latest
#            ghcr.io/agpsn/alpine-base:$AVERSION
#            ghcr.io/agpsn/ubuntu-base:latest
#            ghcr.io/agpsn/ubuntu-base:$UVERSION

      - name: BuildImages
        run: |
          docker build --force-rm --rm --tag ghcr.io/agpsn/alpine-base:latest -f ./Dockerfile.alpine .
          docker build --force-rm --rm --tag ghcr.io/agpsn/alpine-base:$AVERSION -f ./Dockerfile.alpine .
          docker build --force-rm --rm --tag ghcr.io/agpsn/ubuntu-base:latest -f ./Dockerfile.ubuntu .
          docker build --force-rm --rm --tag ghcr.io/agpsn/ubuntu-base:$UVERSION -f ./Dockerfile.ubuntu .
          
      - name: PushImages
        run: |
          docker push ghcr.io/agpsn/alpine-base:latest
          docker push ghcr.io/agpsn/alpine-base:$AVERSION
          docker push ghcr.io/agpsn/ubuntu-base:latest
          docker push ghcr.io/agpsn/ubuntu-base:$UVERSION
          
#      - name: Tags
#        run: |
#           git tag -f $AVERSION && git push origin $AVERSION -f --tags
#           git tag -f $UVERSION && git push origin $UVERSION -f --tags

#      - uses: rickstaa/action-create-tag@v1
#        with:
#          tag: "${AVERSION}"
#          tag_exists_error: false
#          message: "Latest release"
#      -  run: |
#          echo "Tag already present: ${{ env.TAG_EXISTS }}"
          
#      - uses: rickstaa/action-create-tag@v1
#        with:
#          tag: "${UVERSION}"
#          tag_exists_error: false
#          message: "Latest release"
#      -  run: |
#          echo "Tag already present: ${{ env.TAG_EXISTS }}"
          
#      - name: Commit Changes
#        run: |
#          git add . && git commit -am "Updated" && git push --quiet
